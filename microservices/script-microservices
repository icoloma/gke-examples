#!/bin/bash
# This full codelab is available at
# https://codelabs.developers.google.com/codelabs/cloud-orchestrate-with-kubernetes/index.html

# Show the Application Launcher, as an example of what we are doing now

# Create cluster 
gcloud container clusters create icoloma-micro --num-nodes 2

# Alternatively, if the cluster already exists
# gcloud container clusters get-credentials icoloma-micro

gcloud compute instances list
gcloud container clusters list

# There is a submodule with the original codelab
# We will work there
cd orchestrate-with-kubernetes/kubernetes

# Let's create a pod. It's a bad idea, because health will not be monitored
kubectl create -f pods/monolith.yaml
kubectl get pods
kubectl describe pods monolith

# Let's access the pod
kubectl port-forward monolith 10080:80
curl http://127.0.0.1:10080
curl http://127.0.0.1:10080/secure

# Let's login (password: "password")
kubectl logs -f monolith # add -f for stream
TOKEN=$(curl http://127.0.0.1:10080/login -u user|jq -r '.token')
curl -H "Authorization: Bearer $TOKEN" http://127.0.0.1:10080/secure

kubectl exec -ti monolith /bin/sh
ping google.com

# Kill the pod. It does not get recreated
kubectl delete pod monolith

# We're going to break our monolith app into three separate pieces: 
# 
# auth - Generates JWT tokens for authenticated users.
# hello - Greet authenticated users.
# frontend - Routes traffic to the auth and hello services.









K8S Slides, steal from NEXT
Compile VM
Deploy VM
Scale VM
New deployment
Kubernetes UI